org: chrismaille
app: noverde-challenge
service: noverdechallenge

provider:
  name: aws
  runtime: python3.7
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  cfnRole: ${param:CFN_ROLE}
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    SENTRY_DSN: ${param:NOVERDE_SENTRY_DSN}
    SENTRY_ENV: ${self:provider.stage}
    NOVERDE_API_TOKEN: ${param:NOVERDE_API_TOKEN}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
  tracing:
    apiGateway: true
    lambda: true

functions:
  loans_get:
    handler: noverde_challenge/handlers/loan.get
    events:
      - http:
          path: api/loans/{loan_id}
          method: get
          cors: true
          request:
            paths:
              loan_id: true
  loans_post:
    handler: noverde_challenge/handlers/loan.post
    events:
      - http:
          path: api/loans
          method: post
          cors: true

resources:
  Resources:
    NoverdeChallengeDB:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: loan_id
            AttributeType: S
        KeySchema:
          - AttributeName: loan_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-python-requirements
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    stages:
      - develop
    start:
      migrate: true
  pythonRequirements:
    dockerizePip: non-linux
    usePoetry: false
  serverless-offline:
    noTimeout: true